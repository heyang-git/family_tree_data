import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline 
import statsmodels.formula.api as sm
import statsmodels.stats.sandwich_covariance as sw
from sklearn import datasets
from sklearn import linear_model
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
#pd.set_option('display.max_rows', )


di = "/Users/heyang/Dropbox/Familinx/"
filename = di + 'Original Data/familinx/profiles-anon.txt'

# read data
iter_csv = pd.read_csv(filename, sep='\t', usecols=[0, 14, 21], iterator=True, chunksize=10000)
chunks = []
for i, chunk in enumerate(iter_csv):
    if i % 1000 == 0:
        print(i)
    filtered = chunk[(chunk['birth_location_country'] != '*') & (chunk['birth_year'] != '*')]
    chunks.append(filtered)
df = pd.concat(chunks)
df.head()
len(df)

# number of valid observations
valids = set(df['profileid'])
print(len(valids))

# helper function to get parents given a parent-child relationship
def get_parents(l, rel):
    ret = []
    for c in l:
        try:
            ret.extend(rel[c])
        except KeyError:
            pass
    return ret

# read relationship
rel = dict()
with open('Original Data/familinx/relations-anon.txt') as f:
    header = f.readline()
    print(header.rstrip())
    for i, line in enumerate(f):
        if i % 1000000 == 0:
            print(i)
        parent, child = map(int, line.rstrip().split('\t'))
        try:
            rel[child].append(parent)
        except KeyError:
            rel[child] = [parent]
print(len(rel))

# helper function to computer number of ancesters up to 5 generations
def compute_ps(row):
    profileid = row['profileid']
    ancestors = {0: [profileid]}
    for gen in range(1, 6):
        ancestors[gen] = get_parents(ancestors[gen-1], rel)
    for gen in range(1, 6):
        ancestors[gen] = [person for person in ancestors[gen] if person in valids]
    return [len(ancestors[gen]) for gen in range(1, 6)]


df_small = df
res = df_small.apply(compute_ps, axis=1)
for i in range(1, 6):
    df_small['p{}'.format(i)] = 0
    
res.head(20)
p15 = pd.DataFrame.from_records(res.tolist(), columns=['p1', 'p2', 'p3', 'p4', 'p5'])
p15.index = res.index
p15.head(20)
df_small[['p1', 'p2', 'p3', 'p4', 'p5']] = p15

parent = pd.read_csv(di + 'Original Data/familinx/relations-anon.txt', sep = '\t', usecols = [0])
parent = parent.drop_duplicates()

df_small = pd.merge(df_small, parent, how='left', left_on ='profileid', right_on = 'parent')
df_small['parent'] = ~pd.isnull(df_small['parent'])
df_small.to_csv(di + 'Processed/p1_p5.csv')
